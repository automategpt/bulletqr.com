version: '3.7'
networks:
  docker-net:
    name: ${DOCKER_NETWORK}
    driver: bridge
services:
  db:
    image: db
    restart: always
    volumes:
      - ./dockers/db/data:/var/lib/postgresql/data
    container_name: ${POSTGRES_DB}
    build:
      context: ./dockers/db
      target: db
    networks:
      - docker-net
    environment:
      - TZ=GMT+2
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data
      
  api:
    image: api
    container_name: ${API_CONTAINER}
    build:
      context: ./dockers/python_api
    ports:
      - ${PYTHON_PORT}:8000
    volumes:
      - ./dockers/python_api/app:/usr/src/app
    working_dir: /usr/src/app
    networks:
      - docker-net
    depends_on:
      - db
    environment:
      - PY_API_HOST=${PY_API_HOST}
      - PY_WEB_HOST=${PY_WEB_HOST}
      - PY_EMAIL_FROM=${PY_EMAIL_FROM}
      - PY_EMAIL_USER=${PY_EMAIL_USER}
      - PY_EMAIL_PASSWORD=${PY_EMAIL_PASSWORD}
      - PY_EMAIL_HOST=${PY_EMAIL_HOST}
      - PY_EMAIL_PORT=${PY_EMAIL_PORT}
      - PY_DB_USER=${POSTGRES_USER}
      - PY_DB_PASSWORD=${POSTGRES_PASSWORD}
      - PY_DB_HOST=${POSTGRES_DB}
      - PY_DB_PORT=${POSTGRES_PORT}
      - PY_DB_DATABASE=${POSTGRES_DB}
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000


  adminer:
    image: adminer
    container_name: ${ADMINER_CONTAINER}
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - docker-net
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: ${POSTGRES_HOST}

